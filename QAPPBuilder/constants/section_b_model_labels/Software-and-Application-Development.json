{
  "roles_resp_1": "Describe in detail how the planned model or application will be used by the intended end user(s).",
  "roles_resp_2": "Describe any special user roles, including the required tasks they may be required to perform.",
  "requirements_1": "Identify the recommended minimal system requirements to run the application. (Specify computer hardware and operating system e.g., Windows 10, MacOS, Linux, Unix, ram, etc.).",
  "requirements_2": "Describe the naming convention to be used for each software/model design requirement, and how version control (of requirements) will be maintained. (Recommend incorporation of this information within a Requirements Traceability Matrix (RTM). Give example of using JIRA for tracking requirements).",
  "requirements_3": "If the software application is a model, describe the details of the required model inputs (provide detailed information on the data input format[s] and the external interfaces that feed into the model) and outputs (provide detailed information on the model output format[s] and the external interfaces that the model feeds into).",
  "requirements_4_1": "Who will be involved in providing the requirements, (e.g., System Owner, System stakeholders, specific users).",
  "requirements_4_2": "Identify who collects, collates, and documents the software/model requirements.",
  "requirements_4_3": "Identify the method for collecting requirements (e.g., Requirements Traceability Matrix [RTM], Jira Requirements Management, etc.). [A Requirements Traceability Matrix (RTM) is used to trace all requirements back to system objectives, to ensure all System Design (SD) elements are included.]",
  "requirements_4_4": "Identify the process for review and approval of requirements by the customer or system owner in the Software Development Life Cycle (SDLC).",
  "sys_design_1": "Describe the system architecture (components and subcomponents of the software design), including databases, tools, interfaces to external hardware and software, and internal interfaces (including GUIs). Provide a graphical representation(s) of the proposed architecture. (Critical functions of the planned software system application).",
  "sys_design_2": "Describe the rationale for the system architecture (selecting the proposed hardware, software tools, and databases) proposed above, as it relates to the systems requirements document, systems design document, performance work statement (PWS), workplan, etc., as applicable.",
  "sys_design_3": "Describe any anticipated performance, and design constraints. Explain the factors (controllable or uncontrollable) that influence the design and operational behavior of the software/model. Describe the mitigation strategies chosen to address these performance and design constraints as applicable.",
  "coding_1": "Identify the programming(s) language that will be used to develop the system, and any special tools/libraries that may be used during the code writing process (e.g., CI/CD processes, unit-tests, pipelines, etc.).",
  "coding_2": "Identify who is responsible for writing code. If there is more than one developer writing code identify what module/component of the software system each developer is responsible for or describe any team divisions of responsibility as applicable.",
  "coding_3": "Identify strategies for code review and testing.",
  "coding_4": "Describe the software versioning, release, and delivery process and how it is managed. (Include multiple platforms or servers for staging and production in the guidance).",
  "vv_1": "Describe the process for unit testing, code review, and who will be performing the review.",
  "vv_2": "Describe how the requirements for functionality, external interfaces, performance, and design constraints will be tested, verified, and validated (e.g., describe the testing regime for the software [such as unit testing, component testing, integration testing, system testing, QA/QC testing, user acceptance testing {UAT}, etc.]).",
  "vv_3": "Describe the review process for the software's user interface (UI) and output reports. (What is the procedure that verifies the document summary or synthesis statements accurately represent the underlying data used or processed and its limitations? Will system documents/outputs be checked for the correct interpretation of results, promote clarity of discussion, contain appropriate citations and references, and have correct spelling and grammar?).",
  "vv_4_1": "Identify the frequency at which each test must be performed.",
  "vv_4_2": "Identify the time frame or phase of the software lifecycle in which the test will be performed (coding or implementation, deployment, and operations and maintenance).",
  "vv_4_3": "Identify the acceptance criteria for test results.",
  "vv_4_4": "Identify any evaluating factors used to determine the type of failure.",
  "vv_4_5": "Identify the acceptable failure rate of test results, as applicable.",
  "vv_4_6": "If applicable, describe how the ranking of requirements as critical, important, or not important will play a role in evaluating testing results prior to deployment.",
  "vv_4_7": "Describe the review process for secondary test results (including automated tests and UAT).",
  "vv_5": "Describe the procedure or process for determining whether the software application is ready for deployment to a production environment for end-user use. (What happens after testing and validation activities have been completed?).",
  "support_1": "Describe any planned maintenance procedures for the software to ensure the system is running optimally.",
  "support_2": "Describe the process for handling system issues, bugs, and user change requests once the system is deployed.",
  "support_3": "Describe the minimum skill level(s) or qualification(s) that the end user must possess prior to operating or using the software.",
  "support_4": "Describe how users will be granted access to the system and any training required.",
  "support_5": "Identify how the end-user will be informed of the required operational conditions that must be present to use the application and the steps required to achieve the required setup to use the application, or, if a hosted web application, any requirements for user environment setup.",
  "support_6_1": "Describe the process for how test data (input/output) will be developed and identified for the end user to verify the model is operating correctly before use.",
  "support_6_2": "Describe the process for making test data and instructions accessible to the end user to verify the model is operating correctly once installed or updated.",
  "support_7": "Describe the types of training materials and user manuals/system guides that will be developed.",
  "support_7_1": "Identify who will develop the training materials and user manuals/system guides and who is responsible for maintaining the training materials and user manuals/system guides.",
  "support_7_2": "Describe the process for making training materials or user manual/system guides accessible to the end user."
}